    private void mutateMutantCorrelated(Mutant mutant){
        /*
        initialize
         */
        Random r = new Random();
        double[] genes = mutant.getValues();
        double[] standard_deviations = mutant.getSDs();
        double[][] correlations = mutant.getCorrelations();

        /*
        constants
         */
        double tau_1 = Var.TAU_1;
        double tau_2 = Var.TAU_2;
        double boundry = Var.BOUNDRY;
        double beta = Var.BETA;
        double[][] covariance_matrix = new double[genes.length][genes.length];

        for (int i = 0; i < genes.length; i++) {
            /*
            mutate sigma's
             */
            standard_deviations[i] = standard_deviations[i] * Math.exp(tau_1 * r.nextGaussian() + tau_2 * r.nextGaussian());

            if (standard_deviations[i] < boundry) {
                standard_deviations[i] = boundry;
            }

            /*
            mutate alpha's
             */
            for (int j = 0; j < genes.length; j++) {
                if(i==j){
                    covariance_matrix[i][j] = standard_deviations[i] * standard_deviations[i];
                }
                else{
                    correlations[i][j] = correlations[i][j] + beta * r.nextGaussian();
                    covariance_matrix[i][j] = 0.5 * (Math.pow(standard_deviations[i], 2) - Math.pow(standard_deviations[j], 2)) * Math.tan(2 * correlations[i][j]);
                }

            }
        }
        /*
        mutate genes
        */
        Array2DRowRealMatrix realMatrix = new Array2DRowRealMatrix(covariance_matrix);
        CholeskyDecomposition llt = new CholeskyDecomposition(realMatrix);
        RealMatrix L_trans = llt.getLT();
        System.out.println(L_trans);

        for(int i = 0; i < genes.length; i++){

            genes[i] = genes[i] + standard_deviations[i] * r.nextGaussian();
            //        if (genes[i] < Var.SEARCH_SPACE_MIN){
            //            genes[i] = Var.SEARCH_SPACE_MIN;
            //        }
            //        if (genes[i] > Var.SEARCH_SPACE_MAX){
            //            genes[i] = Var.SEARCH_SPACE_MAX;
            //        }
        }




        /*
        save the new genes and standard_deviations
         */
        mutant.setValues(genes);
        mutant.setSDs(standard_deviations);

    }